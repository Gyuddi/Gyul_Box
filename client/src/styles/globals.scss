@font-face {
  font-family: "Pretendard-Regular";
  src: url("https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}
// font-family: 'Noto Sans KR', sans-serif;
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap");
// font-family: 'Poppins', sans-serif;
@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
// font-family: 'Be Vietnam Pro', sans-serif;
@import url("https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
// font-family: "GmarketSansBold";
@font-face {
  font-family: "GmarketSansBold";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansBold.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}
// font-family: "LeferiPoint-WhiteObliqueA";
@font-face {
  font-family: "LeferiPoint-WhiteObliqueA";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2201-2@1.0/LeferiPoint-WhiteObliqueA.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}
// 스타일 설정
:root {
  font-family: "Pretendard-Regular", sans-serif;
}
$primary-color: #007bff;
$btn-border-radius: 4px;

.btn {
  display: inline-block;
  padding: 8px 16px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  border: 1px solid $primary-color;
  border-radius: $btn-border-radius;
  background-color: $primary-color;
  color: #fff;
  text-decoration: none;

  &:hover {
    background-color: darken($primary-color, 10%);
    border-color: darken($primary-color, 10%);
  }

  &:focus,
  &:active {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
  }
}

@mixin center() {
  display: flex;
  align-items: center;
  justify-content: center;
}
//flexbox를 사용하여 요소를 수평 및 수직으로 가운데 정렬합니다.
@mixin center-sb() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
//flexbox를 사용하여 요소를 수평으로 가운데 정렬하고 요소 사이의 간격을 균등하게 분배합니다.

@mixin center-se() {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}
//flexbox를 사용하여 요소를 수평으로 가운데 정렬하고 요소 사이의 간격을 균등하게 분배합니다. 또한 첫번째 요소와 마지막 요소를 컨테이너의 양 끝에 배치합니다.

@mixin c-center() {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}
//center()와 비슷하지만 flexbox의 flex-direction 속성을 column으로 설정하여 요소를 수직 방향으로 정렬합니다.

@mixin c-center-sb() {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
}
//center-sb()와 비슷하지만 flexbox의 flex-direction 속성을 column으로 설정하여 요소를 수직 방향으로 정렬합니다.

@mixin c-center-se() {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  flex-direction: column;
}
//center-se()와 비슷하지만 flexbox의 flex-direction 속성을 column으로 설정하여 요소를 수직 방향으로 정렬합니다.
